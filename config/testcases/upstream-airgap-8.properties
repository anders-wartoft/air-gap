# Used in some log events to identify the source
id=Upstream_8
# Used in the MTU code
nic=lo0
# UDP target (downstream, use static arp and route to be able to send packets over a diode)
targetIP=127.0.0.1
# UDP target port
targetPort=1234
# Kafka source. If more than one, separate the servers with a comma ,
bootstrapServers=kafka-upstream.sitia.nu:9092
# Topic to read
topic=upstream
# Kafka group id to use. If several threads are used, this is prepended to the thread names.
groupID=test
logLevel=DEBUG
# Read from this time instead of starting at the end
#    2024-01-28T10:24:55+01:00
from=
# Downstream public key file. Leave empty to disable encryption
encryption=false
publicKeyFile=certs/server2.pem
# For testing, you can use random, else use kafka
#source=random
source=kafka
# Every n seconds, generate a new symmetric key
generateNewSymmetricKeyEvery=50
# Set mtu to auto or 0 will query the nic of the mtu
#mtu=auto
payloadSize=1400
# After reading the config, where should we send the logs? Default is stdout
logFileName=./tmp/upstream.log
# Add more sending threads (only valid with source=kafka). sendingThread needs to be an array of objects
# Format: {"name": "thread_name", "offset": offset_in_seconds}
#sendingThreads=[{"now": 0}, {"3minutes": -10}]
sendingThreads=[{"No-delay": 0}]
# TLS to Kafka
# Certificate file
#certFile=certs/tmp/airgap-upstream.crt
# Key file
#keyFile=certs/tmp/airgap-upstream.key
# CA file
#caFile=certs/tmp/kafka-ca.crt

